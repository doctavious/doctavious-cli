[package]
name = "doctavious-cli"
version = "0.1.0"
edition = "2018"
description = "Doctavious CLI"
repository = "https://github.com/doctavious/doctavious-cli"
keywords = ["cli", "documentation", "rfc", "adr", "changelog", "snippets", "githooks"]
categories = ["documentation"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
chrono = {version="0.4",features = ["serde"]}
clap = { version = "3.1.12", features = ["derive"] }
comfy-table = "1.1.1"
# TODO: look at config and see if it can help. specifically with the need to merge in env vars
# default-features = false
# features = ["toml", "yaml"]
# config = "0.11.0"
csv = "1.1"
dirs = "4.0.0"
# dirs-next = "2.0.0"
dotavious = { path = "../dotavious" }
env_logger = "0.9"
git2 = "0.14.2"
git-conventional = { version = "0.11.3", features = ["serde"] }
glob = "0.3.0"
gray_matter = "0.2"
indexmap = { version = "1.8.1", features = ["serde"] }
lazy_static = "1.4"
log = "0.4"
# pretty_env_logger = "0.4.0"
regex = "1.5.5"
serde = "1.0"
# serde_json preserve_order feature is required to preserver order of Tera Context items in template
# TODO: look for alternatives to this
serde_json = { version = "1.0", features = ["preserve_order"] }
serde_derive = "1.0"
serde_regex = "1.1.0"
snippext = { path = "../snippext"}
tempfile = "3.3.0"
tera = "1.12.1"
thiserror = "1.0.30"
toml = "0.5"
tokio = { version = "1.17", features = ["macros", "fs"] }
unidecode = "0.3.0"
walkdir = "2.3.2"
which = "4.2.5"

# presentations
# https://github.com/marp-team/marpit
# https://github.com/marp-team/marp-cli
# https://github.com/marp-team/marp-core
# https://jesselawson.org/rust/getting-started-with-rust-by-building-a-tiny-markdown-compiler/
# http://patshaughnessy.net/2019/9/4/using-rust-to-build-a-blog-site
# markdown2html-converter = "1.1.2"
# Pulldown-cmark vs comrak
# need to work on rust-asciidoctor-parser
# mdbook = "0.4.4" --> see how they convert markdown. they have init, build, watch, serve
# Maud is an HTML template crate
# Syntect is a color syntax highlighting crate
# rust doesnt have a puppeteer so
# fantoccini = "0.14.2" --> A high-level API for programmatically interacting with web pages through WebDriver.
# https://github.com/atroche/rust-headless-chrome
# https://docs.rs/pandoc/0.8.0/pandoc/
# marpit uses https://github.com/gitbrent/PptxGenJS which creates Open Office XML (OOXML) Presentations
# what about pptx via OpenDocument formats - we might have to build our own crate
# what else do we need to do presentations?
# https://github.com/FreeMasen/mdbook-presentation-preprocessor

# graphviz
# graphviz is part of core rust?
# mdbook-graphviz = "0.0.2"

[build-dependencies]
walkdir = "2.3.1"

[dev-dependencies]
assert_cmd = "2.0.0"
